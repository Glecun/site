(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{101:function(e,n,a){"use strict";a.d(n,"a",(function(){return b})),a.d(n,"b",(function(){return m}));var t=a(0),r=a.n(t);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function p(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),l=function(e){var n=r.a.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},b=function(e){var n=l(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),b=l(a),u=t,m=b["".concat(i,".").concat(u)]||b[u]||d[u]||o;return a?r.a.createElement(m,s(s({ref:n},c),{},{components:a})):r.a.createElement(m,s({ref:n},c))}));function m(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},61:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return i})),a.d(n,"metadata",(function(){return s})),a.d(n,"rightToc",(function(){return p})),a.d(n,"default",(function(){return l}));var t=a(2),r=a(7),o=(a(0),a(101)),i={id:"faq",title:"FAQ",sidebar_label:"FAQ"},s={unversionedId:"faq",id:"faq",isDocsHomePage:!1,title:"FAQ",description:"Why is webpack a good idea for electron?",source:"@site/docs/faq.md",slug:"/faq",permalink:"/docs/faq",version:"current",sidebar_label:"FAQ",sidebar:"docs",previous:{title:"DevTools",permalink:"/docs/dev-tools"},next:{title:"Upgrade Guide",permalink:"/docs/upgrade-guide"}},p=[{value:"Why is webpack a good idea for electron?",id:"why-is-webpack-a-good-idea-for-electron",children:[]},{value:"Why use Yarn instead of NPM?",id:"why-use-yarn-instead-of-npm",children:[]},{value:"How do I skip building the DLL immediately after install?",id:"how-do-i-skip-building-the-dll-immediately-after-install",children:[]},{value:"Why am I having issues spawning an instance of my app?",id:"why-am-i-having-issues-spawning-an-instance-of-my-app",children:[]}],c={rightToc:p};function l(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},c,a,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"why-is-webpack-a-good-idea-for-electron"},"Why is webpack a good idea for electron?"),Object(o.b)("p",null,"Electron apps face huge hurdles when it comes to matching native performance. There's a number of reasons for that. One of those issues is that a main electron app does not have Ahead-of-Time (AOT) compilation. No optimizations are made to code performance. ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://kev.inburke.com/kevin/node-require-is-dog-slow/"}),Object(o.b)("inlineCode",{parentName:"a"},"require()"))," is ",Object(o.b)("strong",{parentName:"p"},"really")," slow. Webpack helps us reduce the amount of calls made to require by bundling all our code (when possible) into single file. ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/atom/atom/issues/9720"}),"Atom is slow primarily because it makes so many require statements"),"."),Object(o.b)("h2",{id:"why-use-yarn-instead-of-npm"},"Why use Yarn instead of NPM?"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"yarn")," has some features that ",Object(o.b)("inlineCode",{parentName:"p"},"npm")," doesn't, such as ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://yarnpkg.com/lang/en/docs/cli/add/#toc-yarn-add-alias"}),"module aliasing"),", ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://yarnpkg.com/lang/en/docs/workspaces/"}),Object(o.b)("inlineCode",{parentName:"a"},"workspaces")),", and ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/yarnpkg/pnp-sample-app"}),Object(o.b)("inlineCode",{parentName:"a"},"plug'n'play")),". While we're not using any of those features right now, we might in the future."),Object(o.b)("p",null,"The collaborators use ",Object(o.b)("inlineCode",{parentName:"p"},"yarn")," and our CI's use ",Object(o.b)("inlineCode",{parentName:"p"},"yarn")," as well, so we recommend ",Object(o.b)("inlineCode",{parentName:"p"},"yarn")," over ",Object(o.b)("inlineCode",{parentName:"p"},"npm")," to avoid compatibility problems."),Object(o.b)("p",null,"There is nothing stopping anyone from using ",Object(o.b)("inlineCode",{parentName:"p"},"npm")," over ",Object(o.b)("inlineCode",{parentName:"p"},"yarn")," in their projects, but if they do that and they end up running into bugs because of it, we probably won't be able to help them."),Object(o.b)("h2",{id:"how-do-i-skip-building-the-dll-immediately-after-install"},"How do I skip building the DLL immediately after install?"),Object(o.b)("p",null,"Install the dependency with the ",Object(o.b)("inlineCode",{parentName:"p"},"--ignore-scripts")," flag. Here's an example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"yarn add some-dep --ignore-scripts\n")),Object(o.b)("p",null,"To always have the ",Object(o.b)("inlineCode",{parentName:"p"},"--ignore-scripts")," flag on, you can add this to your yarnrc."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-ignore"}),"# Your .yarnrc file located in the root of the project or any directories above\n--ignore-scripts true\n")),Object(o.b)("p",null,"To always have the ",Object(o.b)("inlineCode",{parentName:"p"},"--ignore-scripts")," flag on for specific commands:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-ignore"}),"# Your .yarnrc file located in the root of the project or any directories above\n\n# This will set the --ignore-scripts flag whenever running yarn add\n--add.ignore-scripts true\n")),Object(o.b)("h2",{id:"why-am-i-having-issues-spawning-an-instance-of-my-app"},"Why am I having issues spawning an instance of my app?"),Object(o.b)("p",null,"There are a few caveats with how ",Object(o.b)("inlineCode",{parentName:"p"},"child_process.spawn()")," operates in the context of an Electron app. If you are trying to spawn a packaged binary of your ERB app from a develoment instance (e.g. an instance of your app started with ",Object(o.b)("inlineCode",{parentName:"p"},"yarn dev"),"), you may find that your packaged app starts with issues. This happens because ERB sets some environment variables in ",Object(o.b)("inlineCode",{parentName:"p"},"yarn dev")," that cause problems when set while spawning a packaged version of the app."),Object(o.b)("p",null,"If this is an issue that you face, a workaround is to unset these variables prior to spawning the packaged app:"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"const newEnvVars = { ...process.env };\ndelete newEnvVars.HOT;\ndelete newEnvVars.START_HOT;\nnewEnvVars.NODE_ENV = 'production';\nspawn('path/to/packaged/app.exe', [...args], { ...options, env: { ...newEnvVars } });\n")))}l.isMDXComponent=!0}}]);